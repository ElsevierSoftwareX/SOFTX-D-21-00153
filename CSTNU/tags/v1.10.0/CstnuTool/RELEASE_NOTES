RELEASE NOTES
=============START SNIPPET: rn
v1.10.0
------
	date:	2017-06-22
	
	Package reorganization.
	CSTNEditor cleaned and optimized.

v1.9.0
------
	date:	2016-03-31
	
	Labels are represented in a more compact way.
	Labeled value sets requires less memory.
	It is still possible to choose which kind of representation to use for labeled value sets.
	
v1.8.0
------
	date:	2016-02-24

	Graphs are represented by a new optimized class.
	
v1.7.9
------
	date:	2015-11-26
	
	Added the new feature to CSTN DC-checking. Now DC-checking algorithm considers a user specified 'reaction time' ε (ε>0) of the system during the checking of 
	a network. A reaction time ε means that an engine that executes a CSTN reacts in at least ε time units to a setting of a truth-value to a proposition.  

v1.7.8
------
	date:	2015-10-28
	
	A new sanity check about the correctness of an input CSTNU added: each contingent time point has to have one incoming edge of type 'contingent' and one
	outgoing edge of type 'contingent' from/to the same node, representing the activation time point.

v1.7.7
------
	date:	2015-10-22
	
	Fixed another issue with instantaneous reaction in CSTNU. Thanks to Dian Liu for his help in discovering such error.
	I repeat that, even in this release, it is better to set any timepoint---that depends from a observation timepoint or follows a contingent timepoint---to 
	a not 0 distance from the considered observation timepoint or contingent one.

v1.7.6
------
	date:	2015-09-30
	
	Fixed a subtle bug in the generation of new edges. Thanks to Dian Liu for his help in discovering such error.

v1.7.5
------
	date:	2015-09-23
	
	Cleaned some log messages. 
	We have discovered that instantaneous reaction feature requires a sharp adjustment in semantics of the network.
	We are currently working in the introduction of an ε-reaction (with ε ≥ 0) feature. 
	In the mean time, for CSTN it is possible to DC check assuming instantaneous reaction (ε = 0) 
	while for CSTNU it is only possible to DC check assuming non-instantaneous reaction (ε > 0).
	
	For now, it is better to set any timepoint---that depends from a observation timepoint or follows a contingent timepoint---to a not 0 distance from the 
	considered observation timepoint or contingent one.
	
v1.7.4
------
	date:	2015-09-13
	
	In this release, a more strict check of contingent links has been introduced.
	Bounds of a contingent link A==[x,y]==>B must observe the property 0<x<y<∞. 
	Moreover, since for CSTNU instances it is not yet defined the concept of 'instantaneous reactions', it is not possible to define
	a CSTNU instance in which there exists a constraint like C--[0,0]-->B where B is contingent.
	This constraint requires that C has to be executed in at the same time of the contingent time point B, but this is not possible 
	because B is decided by the environment and the runtime engine has to observe it before to execute standard node like C.
	
v1.7.3
------
	date:	2015-09-10
	
	This release contains some minor bug fixes and a revision of public methods of class it.univr.di.cstnu.algorithms.CSTNU.
	Now, it is possible to check the controllability of a CSTN instance instantiating a CSTNU object and calling its
	dynamicControllabilityCheck(LabeledIntGraph) method.
	It is sufficient to create a LabeledIntGraph object representing a given CSTNU instance (in LabeledIntGraph class there is also a method for loading 
	an instance from a file written in GraphML format), instantiate a CSTNU object and call its method dynamicControllabilityCheck(LabeledIntGraph) passing 
	the created graph.
	
	Moreover, I add the class it.univr.di.cstnu.algorithms.CSTNURunningTime and the script CSTNURunningTime for checking a bundle of CSTNU instances obtaining also 
	some execution time statistics.

v1.7.2
------
	date:	2015-06-24
	
	This release contains some minor bug fixes and a README file explaining the proposed examples of CSTNU/CSTN instances.
	Thanks to Huan Wang for his comments.
	 
v1.7.1
------
	date:	2015-05-28

	This release contains a faster Dynamic Consistency check for CSTNs.
	The java class <<<CSTN.java>>> has been completely rewritten and almost optimized for a faster check.

v1.7.0
------
	date:	2015-03-23

	This release is the first public release.

=============END SNIPPET: rn