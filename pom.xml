<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>it.univr.di</groupId>
	<artifactId>CSTNU-Tool</artifactId><!--Aggiornare anche codemeta.json -->
	<version>4.3</version>
	<name>CSTNU-Tool</name>
	<url>http://prof.sci.univr.it/~posenato/software/cstnu</url>
	<properties>
		<exportAntProperties>true</exportAntProperties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.tool.filename>CstnuTool-${project.version}</project.tool.filename>
		<project.jar.filename>${project.artifactId}-${project.version}.jar</project.jar.filename>
		<project.sourcejar.filename>${project.artifactId}-${project.version}-sources.jar</project.sourcejar.filename>
		<project.javadocjar.filename>${project.artifactId}-${project.version}-javadoc.jar</project.javadocjar.filename>
		<tex.dir>tex</tex.dir>
		<tex.images.dir>${tex.dir}/images</tex.images.dir>
		<java.version>11</java.version><!-- to upgrade to 17, maven-shade-plugin 
			must be upgrade to 3.3.0. -->
		<debug>false</debug>
	</properties>
	<scm>
		<!-- <connection></connection> -->
		<developerConnection>scm:svn:https://profs.scienze.univr.it/posenato/svn/sw/CSTNU/trunk</developerConnection>
		<url>https://archive.softwareheritage.org/browse/origin/directory/?origin_url=https://profs.scienze.univr.it/posenato/svn/sw/CSTNU</url>
		<connection>scm:svn:https://profs.scienze.univr.it/posenato/svn/sw/CSTNU/trunk</connection>
	</scm>

	<licenses>
		<license>
			<name>GNU LESSER GENERAL PUBLIC LICENSE, Version 3</name>
			<url>https://www.gnu.org/licenses/lgpl-3.0-standalone.html</url>
			<distribution>repo</distribution>
			<comments>For all Java Source files</comments>
		</license>
		<license>
			<name>CC0 1.0 Universal</name>
			<url>https://creativecommons.org/publicdomain/zero/1.0/legalcode</url>
			<distribution>repo</distribution>
			<comments>For no Jaba source files</comments>
		</license>
	</licenses>
	<organization>
		<name>Computer Science Department - University of Verona - Italy</name>
		<url>http://www.di.univr.it</url>
	</organization>
	<developers>
		<developer>
			<id>posenato</id>
			<name>Roberto Posenato</name>
			<email>roberto.posenato@univr.it</email>
			<url>http://profs.sci.univr.it/~posenato</url>
			<organization>Computer Science Department - University of Verona - Italy</organization>
			<organizationUrl>http://www.di.univr.it</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>Europe/Rome</timezone>
			<properties>
				<picUrl>http://profs.sci.univr.it/~posenato/home/sites/default/files/styles/thumbnail/public/ritratto2013Fontana.png</picUrl>
			</properties>
		</developer>
	</developers>
	<dependencies>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-visualization</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-graph-impl</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-io</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>args4j</groupId>
			<artifactId>args4j</artifactId>
			<version>2.33</version>
		</dependency>
		<dependency>
			<groupId>com.bpodgursky</groupId>
			<artifactId>jbool_expressions</artifactId>
			<version>1.16</version>
		</dependency>
		<dependency>
			<groupId>it.unimi.dsi</groupId>
			<artifactId>fastutil</artifactId>
			<version>8.4.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.6.1</version>
		</dependency>
		<dependency>
			<groupId>com.mastfrog</groupId>
			<artifactId>simplevalidation-standalone</artifactId>
			<version>1.14</version>
		</dependency>
		<!-- org.freehep is a nice library that allows the exporting of GUI windows 
			in different format. I used it To export an instance in a PDF file. Unfortunately, 
			version 2.4 is not compatbile with JDK > 8. So, for now, I disable it and 
			the function in EditingPopupGraphMousePlugin.java <dependency> <groupId>org.freehep</groupId> 
			<artifactId>freehep-graphicsbase</artifactId> <version>2.4</version> </dependency> 
			<dependency> <groupId>org.freehep</groupId> <artifactId>freehep-io</artifactId> 
			<version>2.2.2</version> </dependency> <dependency> <groupId>org.freehep</groupId> 
			<artifactId>freehep-vectorgraphics</artifactId> <version>2.4</version> <type>pom</type> 
			</dependency> <dependency> <groupId>org.freehep</groupId> <artifactId>freehep-graphics2d</artifactId> 
			<version>2.4</version> </dependency> <dependency> <groupId>org.freehep</groupId> 
			<artifactId>freehep-graphicsio</artifactId> <version>2.4</version> </dependency> 
			<dependency> <groupId>org.freehep</groupId> <artifactId>freehep-graphicsio-svg</artifactId> 
			<version>2.4</version> </dependency> <dependency> <groupId>org.freehep</groupId> 
			<artifactId>freehep-graphicsio-pdf</artifactId> <version>2.4</version> </dependency> -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-nop</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.teneighty</groupId>
			<artifactId>java-heaps</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.netbeans.external</groupId>
			<artifactId>ValidationAPI</artifactId>
			<version>RELEASE124</version>
		</dependency>
		<!-- <dependency> <groupId>org.codehaus.mojo</groupId> <artifactId>findbugs-maven-plugin</artifactId> 
			<version>3.0.5</version> <exclusions> <exclusion> <groupId>xml-apis</groupId> 
			<artifactId>xml-apis</artifactId> </exclusion> <exclusion> <groupId>jaxen</groupId> 
			<artifactId>jaxen</artifactId> </exclusion> </exclusions> </dependency> -->
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>3.0.0-M5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-report-plugin</artifactId>
			<version>3.0.0-M5</version>
		</dependency>
		<dependency>
			<groupId>net.openhft</groupId>
			<artifactId>affinity</artifactId>
			<version>3.21ea5</version>
		</dependency>

		<dependency>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-maven-plugin</artifactId>
			<version>4.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-report-plugin</artifactId>
			<version>3.0.0-M5</version>
			<type>maven-plugin</type>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo1.maven.org/maven2</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>

		<!--il seguente rep è per simplevalidation -->
		<!-- <repository> -->
		<!-- <id>timboudreau-builds</id> -->
		<!-- <name>timboudreau.com builds</name> -->
		<!-- <url>http://timboudreau.com/builds/plugin/repository/everything/</url> -->
		<!-- <releases> -->
		<!-- <enabled>true</enabled> -->
		<!-- <updatePolicy>never</updatePolicy> -->
		<!-- </releases> -->
		<!-- <snapshots> -->
		<!-- <enabled>true</enabled> -->
		<!-- <updatePolicy>never</updatePolicy> -->
		<!-- </snapshots> -->
		<!-- </repository> -->

		<!-- il seguente rep è per freehep -->
		<repository>
			<id>Freehep</id>
			<url>https://java.freehep.org/maven2/</url>
			<releases>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- il seguente rep è per java-heaps -->
		<repository>
			<id>Clojars</id>
			<url>https://clojars.org/repo/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<distributionManagement>
		<site>
			<id>profs</id>
			<!-- la gestione della password è come spiegato in https://maven.apache.org/guides/mini/guide-encryption.html. 
				Master password: quella del 17 -->
			<url>scp://profs.scienze.univr.it/home/posenato/public_html/software/cstnu/</url>
		</site>
		<repository>
			<id>internal.repo</id>
			<name>Internal repo</name>
			<url>file:///tmp</url>
			<layout>default</layout>
		</repository>
	</distributionManagement>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>3.4.2</version><!-- 2.8 -->
			</extension>
		</extensions>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.10</version> <!-- 2.8 -->
				<configuration>
					<classpathContainers>
						<!-- <classpathContainer> org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7 
							</classpathContainer> -->
					</classpathContainers>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version><!-- 3.2 -->
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<fork>true</fork>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.4</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<artifactSet>
								<excludes>
									<exclude>junit:junit</exclude>
								</excludes>
							</artifactSet>
							<minimizeJar>true</minimizeJar>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>module-info.class</exclude>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
										<exclude>logging.properties</exclude>
									</excludes>
								</filter>
								<filter>
									<!-- This force the inclusio of graphicsio classes where there is 
										org.freehep.graphicsio.raw.RawImageWriterSpi that it is necessary but excluded 
										by Maven:shade for some reason. -->
									<artifact>org.freehep:freehep-graphicsio</artifact>
									<includes>
										<include>**</include>
									</includes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>it.univr.di.cstnu.visualization.TNEditor</Main-Class>
										<Build-Number>${project.version}</Build-Number>
										<X-Compile-Source-JDK>${java.version}</X-Compile-Source-JDK>
										<Implementation-Title>${project.artifactId}</Implementation-Title>
										<Implementation-Version>${project.version}</Implementation-Version>
										<Implementation-Vendor>Roberto Posenato</Implementation-Vendor>
									</manifestEntries>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />
								<!-- This bit merges the various META-INF/services files -->
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.9.1</version>
				<!-- <configuration> <skip>true</skip> </configuration> -->
				<dependencies>
					<dependency><!-- add support for ssh/scp -->
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-ssh</artifactId>
						<version>2.8</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-apt</artifactId>
						<version>1.9</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-xhtml</artifactId>
						<version>1.9</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.9</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.skins</groupId>
						<artifactId>maven-fluido-skin</artifactId>
						<version>1.9</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version><!--$NO-MVN-MAN-VER$ --><!-- Fondamentale usare la versione 1.8 -->
				<executions>
					<execution>
						<!-- By default, maven compile and maven package disable the debug 
							code by this process-sources. For having a package with debug code, it is 
							sufficient to execute 'mvn package -Ddebug or set the environment variable 
							'debug' to true at the start of this file. -->
						<id>process-sources-debug</id>
						<phase>process-sources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<condition property="debugNormalized" value="true"
									else="false">
									<or>
										<equals arg1="${debug}" arg2="True" />
										<equals arg1="${debug}" arg2="true" />
										<equals arg1="${debug}" arg2="" />
									</or>
								</condition>
								<echo>Set Debug.java to ${debugNormalized}</echo>
								<replaceregexp
									file="${basedir}/src/main/java/it/univr/di/Debug.java"
									match="ON\s*=\s.*" replace="ON = ${debugNormalized};" />
							</target>
						</configuration>
					</execution>

					<execution>
						<id>package</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<delete>
									<fileset dir="${basedir}/CstnuTool/"
										includes="${project.artifactId}-*.jar" />
								</delete>
								<copy preservelastmodified="true"
									file="${project.build.directory}/${project.jar.filename}"
									tofile="${basedir}/CstnuTool/${project.jar.filename}" />
								<!--<copy preservelastmodified="true" file="${project.build.directory}/${project.sourcejar.filename}" 
									tofile="${basedir}/CstnuTool/${project.sourcejar.filename}" /> <copy preservelastmodified="true" 
									file="${project.build.directory}/${project.javadocjar.filename}" tofile="${basedir}/CstnuTool/${project.javadocjar.filename}" 
									/> -->
								<copy preservelastmodified="true"
									file="${basedir}/README.md"
									tofile="${basedir}/CstnuTool/README.md" />
								<copy preservelastmodified="true"
									file="${basedir}/RELEASE_NOTES.md"
									tofile="${basedir}/CstnuTool/RELEASE_NOTES.md" />
								<copy preservelastmodified="true"
									todir="${basedir}/CstnuTool/Docs">
									<fileset dir="${basedir}/Docs" />
								</copy>
								<tar compression="gzip"
									destfile="${basedir}/${project.tool.filename}.tgz">
									<tarfileset dir="${basedir}/CstnuTool/"
										prefix="${project.tool.filename}">
										<include name="**" />
										<exclude name="uppaal-tiga-*/**" />
										<exclude name="Instances/sampleCSTNwithE1.tgz" />
										<exclude name="Instances/sampleCSTNwithE1/**" />
										<exclude name="OddCases/**" />
									</tarfileset>
								</tar>
								<delete>
									<fileset dir="${basedir}/src/site/resources/bin/"
										includes="*.jar" />
								</delete>
								<copy preservelastmodified="true"
									file="${basedir}/${project.tool.filename}.tgz"
									tofile="${basedir}/src/site/resources/bin/${project.tool.filename}.tgz" />
							</target>
						</configuration>
					</execution>
					<execution>
						<id>pre-site</id>
						<phase>pre-site</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<delete dir="${basedir}/target/site" verbose="true" />
								<delete>
									<fileset dir="${basedir}/src/site/${tex.images.dir}/"
										includes="*.pdf" />
								</delete>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>site</id>
						<phase>site</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<delete>
									<fileset dir="${basedir}/target/site/bin/"
										includes="*.tgz" />
								</delete>
								<copy todir="${basedir}/target/site/bin/"
									preservelastmodified="true">
									<fileset dir="${basedir}/src/site/resources/bin/">
										<include name="*.tgz" />
									</fileset>
								</copy>
								<delete>
									<fileset dir="${basedir}/target/site/${tex.dir}"
										includes="*.dvi" />
								</delete>
								<mkdir dir="${basedir}/target/site/${tex.images.dir}" />
								<move todir="${basedir}/target/site/${tex.images.dir}"
									preservelastmodified="true">
									<fileset dir="${basedir}/target/m2latex/images">
										<include name="*.svg" />
									</fileset>
									<regexpmapper from="^(.*)-figure(.*)\.svg$$"
										to="\1\2x.svg" /><!-- rename necessario perché tikz externalize 
										genera nomi che non solo quelli che si aspetta tex4ht -->
								</move>

							</target>
						</configuration>
					</execution>
					<execution>
						<id>Cancellazione e copia in Ulm Prototype</id>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<delete>
									<fileset
										dir="/Users/posenato/Documents/Ricerca/Ulm/Prototypes/trunk/de.uniulm.dbis.aristaflow.randomtemplategenerator/lib/"
										includes="CSTNU-*" />
									<fileset
										dir="/Users/posenato/Documents/Ricerca/Ulm/Prototypes/RandomTemplateSampler/lib/"
										includes="CSTNU-*" />
								</delete>
								<copy preservelastmodified="true"
									file="${project.build.directory}/${project.jar.filename}"
									tofile="/Users/posenato/Documents/Ricerca/Ulm/Prototypes/trunk/de.uniulm.dbis.aristaflow.randomtemplategenerator/lib/${project.jar.filename}" />
								<copy preservelastmodified="true"
									file="${project.build.directory}/${project.jar.filename}"
									tofile="/Users/posenato/Documents/Ricerca/Ulm/Prototypes/RandomTemplateSampler/lib/${project.jar.filename}" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>2.0.0</version><!-- 1.0 -->
				<executions>
					<execution>
						<id>CleaningVega</id>
						<phase>install</phase>
						<goals>
							<goal>sshexec</goal>
						</goals>
						<configuration>
							<serverId>vega</serverId>
							<url>scp://vega.di.univr.it</url>
							<displayCommandOutputs>true</displayCommandOutputs>
							<commands>
								<command>rm -fv RandomTemplateSampler/lib/CSTNU-*jar</command>
								<command>rm -fv CSTNU-*jar</command>
							</commands>
						</configuration>
					</execution>
					<execution>
						<id>UploadingVega 2</id>
						<phase>install</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<serverId>vega</serverId>
							<fromDir>${project.basedir}/target/</fromDir>
							<includes>${project.jar.filename}</includes>
							<url>scp://vega.di.univr.it/home/posenato</url>
							<toDir></toDir>
						</configuration>
					</execution>
					<execution>
						<id>UploadingVega</id>
						<phase>install</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<serverId>vega</serverId>
							<fromDir>${project.basedir}/target/</fromDir>
							<includes>${project.jar.filename}</includes>
							<url>scp://vega.di.univr.it/home/posenato</url>
							<toDir>RandomTemplateSampler/lib</toDir>
						</configuration>
					</execution>
					<execution>
						<id>CleaningCluster</id>
						<phase>install</phase>
						<goals>
							<goal>sshexec</goal>
						</goals>
						<configuration>
							<serverId>cluster</serverId>
							<url>scp://157.27.254.70</url>
							<displayCommandOutputs>true</displayCommandOutputs>
							<commands>
								<command>ls -l CSTNU-*jar</command>
								<command>rm -fv CSTNU-*jar</command>
							</commands>
						</configuration>
					</execution>
					<execution>
						<id>UploadingCluster</id>
						<phase>install</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<serverId>cluster</serverId>
							<fromDir>${project.basedir}/target/</fromDir>
							<includes>${project.jar.filename}</includes>
							<url>scp://157.27.254.70/home/roberto.posenato</url>
							<toDir></toDir>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>de.akquinet.jbosscc.latex</groupId>
				<artifactId>maven-latex-plugin</artifactId>
				<version>1.2</version>
				<inherited>false</inherited>
				<configuration>
					<settings>
						<!-- all tex main documents in this folder (including subfolders) will 
							be processed -->
						<texDirectory>${basedir}/src/site/tex</texDirectory>
						<!-- the generated artifacts will be copied to this folder relative 
							to ${project.reporting.outputDirectory} -->
						<outputDirectory>${tex.dir}</outputDirectory>
						<!-- the working directory, for temporary files and LaTeX processing 
							relative to ${project.build.directory} -->
						<tempDirectory>m2latex</tempDirectory>
						<!-- clean up the working directory in the end? May be used for debugging -->
						<cleanUp>false</cleanUp>
						<!-- path to the TeX scripts, if none, it must be on the system path -->
						<texPath />
						<!-- the latex command -->
						<texCommand>latexmk</texCommand>
						<!-- the bibtex command -->
						<bibtexCommand>bibtex</bibtexCommand>
						<!-- the arguments to use when calling latex -->
						<texCommandArgs>
							<texCommandArg>-interaction=nonstopmode</texCommandArg>
							<texCommandArg>-shell-escape</texCommandArg>
						</texCommandArgs>
						<!-- the tex4ht command -->
						<tex4htCommand>htlatex</tex4htCommand>
						<!-- the argumants to use when calling tex4ht -->
						<tex4htCommandArgs>
							<tex4htCommandArg>lib/mytex4ht.cfg</tex4htCommandArg>
							<tex4htCommandArg> -elib/myexternalize.4ht -cunihtf -utf8</tex4htCommandArg><!--initial 
								space is necessary! -->
							<tex4htCommandArg> -cvalidate -p</tex4htCommandArg>
							<tex4htCommandArg> -interaction=nonstopmode -shell-escape</tex4htCommandArg>
						</tex4htCommandArgs>
					</settings>
				</configuration>
				<executions>
					<execution>
						<id>pdf_html</id>
						<phase>pre-site</phase>
						<goals>
							<!--<goal>latex</goal> -->
							<goal>tex4ht</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<show>package</show>
					<doclint>all,-html</doclint><!-- stuff to check. I removed HTML because 
						Javadoc 11 does not recognise HTML entities! -->
					<source>${java.version}</source>
					<detectJavaApiLink>false</detectJavaApiLink>
					<sourceFileExcludes>
						<exclude>**/wf/*.java</exclude>
						<exclude>**/lazy/*.java</exclude>
					</sourceFileExcludes>
					<keywords>true</keywords>
					<tags>
						<tag>
							<name>implSpec</name>
							<placement>a</placement>
							<head>Implementation Requirements:</head>
						</tag>
						<tag>
							<name>implNote</name>
							<placement>a</placement>
							<head>Implementation Note:</head>
						</tag>
					</tags>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<excludes>
						<exclude>**/*Lazy*.java</exclude>
						<exclude>**/lazy/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

		</plugins>
	</build>


	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<excludes>
						<exclude>**/*Lazy*.java</exclude>
						<exclude>**/lazy/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.1.1</version><!-- 2.8 -->
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>team</report>
							<report>licenses</report>
							<report>dependency-info</report>
							<report>scm</report>
							<!-- <report>mailing-list</report> <report>cim</report> <report>issue-tracking</report> -->
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.0</version>
				<reportSets>
					<reportSet>
						<id>html</id>
						<reports>
							<report>aggregate-no-fork</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<show>package</show>
					<doclint>all,-html</doclint><!-- stuff to check. I removed HTML because 
						Javadoc 11 does not recognise HTML entities! -->
					<source>${java.version}</source>
					<detectJavaApiLink>false</detectJavaApiLink>
					<sourceFileExcludes>
						<exclude>**/wf/*.java</exclude>
						<exclude>**/lazy/*.java</exclude>
					</sourceFileExcludes>
					<keywords>true</keywords>
					<tags>
						<tag>
							<name>implSpec</name>
							<placement>a</placement>
							<head>Implementation Requirements:</head>
						</tag>
						<tag>
							<name>implNote</name>
							<placement>a</placement>
							<head>Implementation Note:</head>
						</tag>
					</tags>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>findbugs-maven-plugin</artifactId> 
				<version>3.0.5</version> <configuration> <effort>Default</effort> <threshold>Medium</threshold> 
				<xmlOutput>true</xmlOutput> Optional directory to put findbugs xdoc xml report 
				<xmlOutputDirectory>target/site</xmlOutputDirectory> <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile> 
				</configuration> </plugin> -->

			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.2.3</version>
				<configuration>
					<effort>Max</effort>
					<threshold>Medium</threshold>
					<xmlOutput>true</xmlOutput>
					<xmlOutputDirectory>target/site</xmlOutputDirectory>
					<excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>Debug</id>
			<activation>
				<property>
					<name>debug</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>
